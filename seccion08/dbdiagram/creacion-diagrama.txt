// Creamos la tabla users en https://dbdiagram.io/home
//Siempre colocar en cada tabla lo minimo necesario
Table users {
  user_id integer [pk, increment]
  username varchar(50) [not null, unique]
  password varchar [not null]
  name varchar [not null]
  role varchar [not null]
  gender varchar(10) [not null]
  avatar varchar

  created_at timestamp [default: 'now()']

  //una de las maneras
  // indexes {
  //   (username)[unique]
  // }

}

Table posts {
  post_id integer [pk, increment]
  tittle varchar(200) [default: '']
  body text [default: '']
  og_image varchar
  slug varchar [not null, unique]
  published boolean

  created_by integer

  created_at timestamp [default: 'now()']
}




Table claps {
  clap_id integer [pk, increment]
  post_id integer
  user_id integer
  counter integer [default: 0]

  created_ad timestamp

  indexes {
    (post_id, user_id)[unique]
  }
}

Table comments {
  comment_id integer [pk, increment]
  post_id integer
  user_id integer
  content text
  created_ad timestamp
  visible boolean
  comment_parent_id integer

  indexes {
    (post_id)
    (visible)
  }
}

Table user_list {
  user_list_id integer [pk, increment]
  user_id integer
  tittle varchar(100)

  indexes {
    (user_id, tittle) [unique]
    (user_id)
  }

}

Table user_list_entry {
  user_list_entry integer [pk, increment]
  user_list_id integer
  post_id integer

}


Ref: "users"."user_id" < "posts"."created_by"

Ref: "users"."user_id" < "claps"."user_id"

Ref: "posts"."post_id" < "claps"."post_id"

Ref: "posts"."post_id" < "comments"."comment_id"

Ref: "users"."user_id" < "comments"."user_id"

Ref: "comments"."comment_id" < "comments"."comment_parent_id"

Ref: "users"."user_id" < "user_list"."user_id"

Ref: "user_list"."user_list_id" < "user_list_entry"."user_list_id"

Ref: "posts"."post_id" < "user_list_entry"."post_id"