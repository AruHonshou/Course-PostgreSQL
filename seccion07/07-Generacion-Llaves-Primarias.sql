--Eliminar todas las tablas existentes
--creamos tabla con serial que es valor default secuencial
create table "users" ( 
	"user_id" SERIAL PRIMARY KEY,
	"username" VARCHAR
);

--ctrl + p //escribir sequences para verlos

--El IDENTITY tiene beneficios como poder forzar a que nadie me inserte ID de manera manual
create table "users2" (
	"user_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	"username" VARCHAR
);


--Tiene que ser por defecto el ID, no debemos de ingresarlo
create table "users3" (
	"user_id" INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	"username" VARCHAR
);

--Se genera el ID por defecto y empieza desde el 100 y sube de 2 en 2
create table "users4" (
	"user_id" INTEGER GENERATED ALWAYS AS IDENTITY( start with 100 INCREMENT BY 2),
	"username" VARCHAR
);

--Llaves compuestas
create table usersDual (
	id1 int,
	id2 int,
	PRIMARY KEY (id1, id2)--las 2 son primary kay, compuestas Y CLARO, NO SE REPITEN, SON UNICAS
);

--UUID
--https://www.postgresql.org/docs/current/uuid-ossp.html

--Creamos las extensiones de UUID
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
DROP EXTENSION "uuid-ossp";


SELECT gen_random_uuid();


CREATE table users5 (
	"user_id" UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
	"username" VARCHAR
);

--Secuencias
create SEQUENCE user_sequence;
DROP SEQUENCE user_sequence;--De referencia, no hacer

--valor actual de la secuencia, cambio de valor, valor actual nuevo
select currval('user_sequence'), nextval('user_sequence'), currval('user_sequence');

--Creamos la tabla con nextval donde vemos que el ID de "Aru" es la continuacion de la secuencia
create table "users6" (
	"user_id" INTEGER PRIMARY KEY DEFAULT nextval('user_sequence'),
	"username" VARCHAR
);

